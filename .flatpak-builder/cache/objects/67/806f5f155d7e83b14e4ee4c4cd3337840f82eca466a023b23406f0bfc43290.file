/* SaveDialog.c generated by valac 0.56.17, the Vala compiler
 * generated from SaveDialog.vala, do not modify */

/*
* Copyright (c) 2014–2016 Fabio Zaramella <ffabio.96.x@gmail.com>
*               2017–2022 elementary, Inc. (https://elementary.io)
*
* This program is free software; you can redistribute it and/or
* modify it under the terms of the GNU Lesser General Public
* License version 3 as published by the Free Software Foundation.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
* General Public License for more details.
*
* You should have received a copy of the GNU General Public
* License along with this program; if not, write to the
* Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
* Boston, MA 02110-1301 USA
*
* Authored by: Artem Anufrij <artem.anufrij@live.de>
*              Fabio Zaramella <ffabio.96.x@gmail.com>
*/

#include <granite-7.h>
#include <glib-object.h>
#include <gdk-pixbuf/gdk-pixbuf.h>
#include <gio/gio.h>
#include <gtk/gtk.h>
#include <glib.h>
#include <glib/gi18n-lib.h>
#include <stdlib.h>
#include <string.h>
#include <gdk/gdk.h>
#include <float.h>
#include <math.h>

#define SCREENSHOT_APPLICATION_SAVE_FOLDER _ ("Screenshots")
#if !defined(VALA_STRICT_C)
#if !defined(__clang__) && defined(__GNUC__) && (__GNUC__ >= 14)
#pragma GCC diagnostic warning "-Wincompatible-pointer-types"
#elif defined(__clang__) && (__clang_major__ >= 16)
#pragma clang diagnostic ignored "-Wincompatible-function-pointer-types"
#pragma clang diagnostic ignored "-Wincompatible-pointer-types"
#endif
#endif
#if !defined(VALA_EXTERN)
#if defined(_MSC_VER)
#define VALA_EXTERN __declspec(dllexport) extern
#elif __GNUC__ >= 4
#define VALA_EXTERN __attribute__((visibility("default"))) extern
#else
#define VALA_EXTERN extern
#endif
#endif

#define SCREENSHOT_TYPE_SAVE_DIALOG (screenshot_save_dialog_get_type ())
#define SCREENSHOT_SAVE_DIALOG(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SCREENSHOT_TYPE_SAVE_DIALOG, ScreenshotSaveDialog))
#define SCREENSHOT_SAVE_DIALOG_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SCREENSHOT_TYPE_SAVE_DIALOG, ScreenshotSaveDialogClass))
#define SCREENSHOT_IS_SAVE_DIALOG(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SCREENSHOT_TYPE_SAVE_DIALOG))
#define SCREENSHOT_IS_SAVE_DIALOG_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SCREENSHOT_TYPE_SAVE_DIALOG))
#define SCREENSHOT_SAVE_DIALOG_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SCREENSHOT_TYPE_SAVE_DIALOG, ScreenshotSaveDialogClass))

typedef struct _ScreenshotSaveDialog ScreenshotSaveDialog;
typedef struct _ScreenshotSaveDialogClass ScreenshotSaveDialogClass;
typedef struct _ScreenshotSaveDialogPrivate ScreenshotSaveDialogPrivate;
enum  {
	SCREENSHOT_SAVE_DIALOG_0_PROPERTY,
	SCREENSHOT_SAVE_DIALOG_PIXBUF_PROPERTY,
	SCREENSHOT_SAVE_DIALOG_SETTINGS_PROPERTY,
	SCREENSHOT_SAVE_DIALOG_NUM_PROPERTIES
};
static GParamSpec* screenshot_save_dialog_properties[SCREENSHOT_SAVE_DIALOG_NUM_PROPERTIES];
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))
typedef struct _Block2Data Block2Data;
#define _g_free0(var) (var = (g_free (var), NULL))
#define _g_date_time_unref0(var) ((var == NULL) ? NULL : (var = (g_date_time_unref (var), NULL)))
enum  {
	SCREENSHOT_SAVE_DIALOG_SAVE_RESPONSE_SIGNAL,
	SCREENSHOT_SAVE_DIALOG_NUM_SIGNALS
};
static guint screenshot_save_dialog_signals[SCREENSHOT_SAVE_DIALOG_NUM_SIGNALS] = {0};

struct _ScreenshotSaveDialog {
	GraniteDialog parent_instance;
	ScreenshotSaveDialogPrivate * priv;
};

struct _ScreenshotSaveDialogClass {
	GraniteDialogClass parent_class;
};

struct _ScreenshotSaveDialogPrivate {
	GdkPixbuf* _pixbuf;
	GSettings* _settings;
	GtkLabel* folder_name;
	GtkImage* folder_image;
};

struct _Block2Data {
	int _ref_count_;
	ScreenshotSaveDialog* self;
	gchar* folder_dir;
	gchar* file_name;
	GraniteValidatedEntry* name_entry;
	GtkLabel* validation_label;
	GtkRevealer* name_message_revealer;
	GtkComboBoxText* format_cmb;
	GtkFileChooserNative* location_dialog;
	GtkButton* save_btn;
};

static gint ScreenshotSaveDialog_private_offset;
static gpointer screenshot_save_dialog_parent_class = NULL;

VALA_EXTERN GType screenshot_save_dialog_get_type (void) G_GNUC_CONST ;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (ScreenshotSaveDialog, g_object_unref)
VALA_EXTERN ScreenshotSaveDialog* screenshot_save_dialog_new (GdkPixbuf* pixbuf,
                                                  GSettings* settings);
VALA_EXTERN ScreenshotSaveDialog* screenshot_save_dialog_construct (GType object_type,
                                                        GdkPixbuf* pixbuf,
                                                        GSettings* settings);
static void screenshot_save_dialog_update_location_button (ScreenshotSaveDialog* self,
                                                    const gchar* folder_dir);
VALA_EXTERN void screenshot_save_dialog_hide_destroy (ScreenshotSaveDialog* self);
static void __lambda6_ (ScreenshotSaveDialog* self);
static void ___lambda6__gsource_once_func (gpointer self);
VALA_EXTERN GdkPixbuf* screenshot_save_dialog_get_pixbuf (ScreenshotSaveDialog* self);
static void screenshot_save_dialog_set_pixbuf (ScreenshotSaveDialog* self,
                                        GdkPixbuf* value);
VALA_EXTERN GSettings* screenshot_save_dialog_get_settings (ScreenshotSaveDialog* self);
static void screenshot_save_dialog_set_settings (ScreenshotSaveDialog* self,
                                          GSettings* value);
static void g_cclosure_user_marshal_VOID__BOOLEAN_STRING_STRING_STRING (GClosure * closure,
                                                                 GValue * return_value,
                                                                 guint n_param_values,
                                                                 const GValue * param_values,
                                                                 gpointer invocation_hint,
                                                                 gpointer marshal_data);
static GObject * screenshot_save_dialog_constructor (GType type,
                                              guint n_construct_properties,
                                              GObjectConstructParam * construct_properties);
static Block2Data* block2_data_ref (Block2Data* _data2_);
static void block2_data_unref (void * _userdata_);
VALA_EXTERN void screenshot_application_create_dir_if_missing (const gchar* path);
static void _screenshot_save_dialog___lambda7_ (Block2Data* _data2_);
static void __screenshot_save_dialog___lambda7__gtk_editable_changed (GtkEditable* _sender,
                                                               gpointer self);
static void _screenshot_save_dialog___lambda8_ (Block2Data* _data2_);
static void __screenshot_save_dialog___lambda8__gtk_button_clicked (GtkButton* _sender,
                                                             gpointer self);
static void _screenshot_save_dialog___lambda9_ (ScreenshotSaveDialog* self);
static void __screenshot_save_dialog___lambda9__gtk_button_clicked (GtkButton* _sender,
                                                             gpointer self);
static void _screenshot_save_dialog___lambda10_ (Block2Data* _data2_);
static void __screenshot_save_dialog___lambda10__gtk_button_clicked (GtkButton* _sender,
                                                              gpointer self);
static void _screenshot_save_dialog___lambda11_ (Block2Data* _data2_);
static void __screenshot_save_dialog___lambda11__gtk_combo_box_changed (GtkComboBox* _sender,
                                                                 gpointer self);
static void _screenshot_save_dialog___lambda12_ (Block2Data* _data2_);
static void __screenshot_save_dialog___lambda12__gtk_button_clicked (GtkButton* _sender,
                                                              gpointer self);
static void _screenshot_save_dialog___lambda13_ (Block2Data* _data2_,
                                          gint response);
static void __screenshot_save_dialog___lambda13__gtk_native_dialog_response (GtkNativeDialog* _sender,
                                                                      gint response_id,
                                                                      gpointer self);
static void screenshot_save_dialog_finalize (GObject * obj);
static GType screenshot_save_dialog_get_type_once (void);
static void _vala_screenshot_save_dialog_get_property (GObject * object,
                                                guint property_id,
                                                GValue * value,
                                                GParamSpec * pspec);
static void _vala_screenshot_save_dialog_set_property (GObject * object,
                                                guint property_id,
                                                const GValue * value,
                                                GParamSpec * pspec);

static inline gpointer
screenshot_save_dialog_get_instance_private (ScreenshotSaveDialog* self)
{
	return G_STRUCT_MEMBER_P (self, ScreenshotSaveDialog_private_offset);
}

ScreenshotSaveDialog*
screenshot_save_dialog_construct (GType object_type,
                                  GdkPixbuf* pixbuf,
                                  GSettings* settings)
{
	ScreenshotSaveDialog * self = NULL;
#line 32 "../src/SaveDialog.vala"
	g_return_val_if_fail (pixbuf != NULL, NULL);
#line 32 "../src/SaveDialog.vala"
	g_return_val_if_fail (settings != NULL, NULL);
#line 33 "../src/SaveDialog.vala"
	self = (ScreenshotSaveDialog*) g_object_new (object_type, "deletable", FALSE, "modal", TRUE, "pixbuf", pixbuf, "settings", settings, "title", _ ("Screenshot"), NULL);
#line 32 "../src/SaveDialog.vala"
	return self;
#line 202 "SaveDialog.c"
}

ScreenshotSaveDialog*
screenshot_save_dialog_new (GdkPixbuf* pixbuf,
                            GSettings* settings)
{
#line 32 "../src/SaveDialog.vala"
	return screenshot_save_dialog_construct (SCREENSHOT_TYPE_SAVE_DIALOG, pixbuf, settings);
#line 211 "SaveDialog.c"
}

static void
screenshot_save_dialog_update_location_button (ScreenshotSaveDialog* self,
                                               const gchar* folder_dir)
{
	GFile* file = NULL;
	GFile* _tmp0_;
	GError* _inner_error0_ = NULL;
#line 238 "../src/SaveDialog.vala"
	g_return_if_fail (self != NULL);
#line 238 "../src/SaveDialog.vala"
	g_return_if_fail (folder_dir != NULL);
#line 239 "../src/SaveDialog.vala"
	_tmp0_ = g_file_new_for_path (folder_dir);
#line 239 "../src/SaveDialog.vala"
	file = _tmp0_;
#line 229 "SaveDialog.c"
	{
		GFileInfo* info = NULL;
		GFileInfo* _tmp1_;
		GtkLabel* _tmp2_;
		const gchar* _tmp3_;
		GtkImage* _tmp4_;
		GIcon* _tmp5_;
#line 241 "../src/SaveDialog.vala"
		_tmp1_ = g_file_query_info (file, G_FILE_ATTRIBUTE_STANDARD_DISPLAY_NAME "," G_FILE_ATTRIBUTE_STANDARD_ICON, G_FILE_QUERY_INFO_NONE, NULL, &_inner_error0_);
#line 241 "../src/SaveDialog.vala"
		info = _tmp1_;
#line 241 "../src/SaveDialog.vala"
		if (G_UNLIKELY (_inner_error0_ != NULL)) {
#line 243 "SaveDialog.c"
			goto __catch0_g_error;
		}
#line 245 "../src/SaveDialog.vala"
		_tmp2_ = self->priv->folder_name;
#line 245 "../src/SaveDialog.vala"
		_tmp3_ = g_file_info_get_display_name (info);
#line 245 "../src/SaveDialog.vala"
		gtk_label_set_label (_tmp2_, _tmp3_);
#line 246 "../src/SaveDialog.vala"
		_tmp4_ = self->priv->folder_image;
#line 246 "../src/SaveDialog.vala"
		_tmp5_ = g_file_info_get_icon (info);
#line 246 "../src/SaveDialog.vala"
		g_object_set (_tmp4_, "gicon", _tmp5_, NULL);
#line 240 "../src/SaveDialog.vala"
		_g_object_unref0 (info);
#line 260 "SaveDialog.c"
	}
	goto __finally0;
	__catch0_g_error:
	{
		GtkLabel* _tmp6_;
		GtkImage* _tmp7_;
		GThemedIcon* _tmp8_;
		GThemedIcon* _tmp9_;
#line 240 "../src/SaveDialog.vala"
		g_clear_error (&_inner_error0_);
#line 248 "../src/SaveDialog.vala"
		_tmp6_ = self->priv->folder_name;
#line 248 "../src/SaveDialog.vala"
		gtk_label_set_label (_tmp6_, folder_dir);
#line 249 "../src/SaveDialog.vala"
		_tmp7_ = self->priv->folder_image;
#line 249 "../src/SaveDialog.vala"
		_tmp8_ = (GThemedIcon*) g_themed_icon_new ("folder");
#line 249 "../src/SaveDialog.vala"
		_tmp9_ = _tmp8_;
#line 249 "../src/SaveDialog.vala"
		g_object_set (_tmp7_, "gicon", (GIcon*) _tmp9_, NULL);
#line 249 "../src/SaveDialog.vala"
		_g_object_unref0 (_tmp9_);
#line 285 "SaveDialog.c"
	}
	__finally0:
#line 240 "../src/SaveDialog.vala"
	if (G_UNLIKELY (_inner_error0_ != NULL)) {
#line 240 "../src/SaveDialog.vala"
		_g_object_unref0 (file);
#line 240 "../src/SaveDialog.vala"
		g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 240 "../src/SaveDialog.vala"
		g_clear_error (&_inner_error0_);
#line 240 "../src/SaveDialog.vala"
		return;
#line 298 "SaveDialog.c"
	}
#line 238 "../src/SaveDialog.vala"
	_g_object_unref0 (file);
#line 302 "SaveDialog.c"
}

static void
__lambda6_ (ScreenshotSaveDialog* self)
{
#line 256 "../src/SaveDialog.vala"
	g_signal_emit_by_name ((GtkDialog*) self, "close");
#line 310 "SaveDialog.c"
}

static void
___lambda6__gsource_once_func (gpointer self)
{
#line 255 "../src/SaveDialog.vala"
	__lambda6_ ((ScreenshotSaveDialog*) self);
#line 318 "SaveDialog.c"
}

void
screenshot_save_dialog_hide_destroy (ScreenshotSaveDialog* self)
{
#line 253 "../src/SaveDialog.vala"
	g_return_if_fail (self != NULL);
#line 254 "../src/SaveDialog.vala"
	gtk_widget_hide ((GtkWidget*) self);
#line 255 "../src/SaveDialog.vala"
	g_timeout_add_once ((guint) 500, ___lambda6__gsource_once_func, self);
#line 330 "SaveDialog.c"
}

GdkPixbuf*
screenshot_save_dialog_get_pixbuf (ScreenshotSaveDialog* self)
{
	GdkPixbuf* result;
	GdkPixbuf* _tmp0_;
#line 24 "../src/SaveDialog.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 24 "../src/SaveDialog.vala"
	_tmp0_ = self->priv->_pixbuf;
#line 24 "../src/SaveDialog.vala"
	result = _tmp0_;
#line 24 "../src/SaveDialog.vala"
	return result;
#line 346 "SaveDialog.c"
}

static gpointer
_g_object_ref0 (gpointer self)
{
#line 24 "../src/SaveDialog.vala"
	return self ? g_object_ref (self) : NULL;
#line 354 "SaveDialog.c"
}

static void
screenshot_save_dialog_set_pixbuf (ScreenshotSaveDialog* self,
                                   GdkPixbuf* value)
{
	GdkPixbuf* old_value;
#line 24 "../src/SaveDialog.vala"
	g_return_if_fail (self != NULL);
#line 24 "../src/SaveDialog.vala"
	old_value = screenshot_save_dialog_get_pixbuf (self);
#line 24 "../src/SaveDialog.vala"
	if (old_value != value) {
#line 368 "SaveDialog.c"
		GdkPixbuf* _tmp0_;
#line 24 "../src/SaveDialog.vala"
		_tmp0_ = _g_object_ref0 (value);
#line 24 "../src/SaveDialog.vala"
		_g_object_unref0 (self->priv->_pixbuf);
#line 24 "../src/SaveDialog.vala"
		self->priv->_pixbuf = _tmp0_;
#line 24 "../src/SaveDialog.vala"
		g_object_notify_by_pspec ((GObject *) self, screenshot_save_dialog_properties[SCREENSHOT_SAVE_DIALOG_PIXBUF_PROPERTY]);
#line 378 "SaveDialog.c"
	}
}

GSettings*
screenshot_save_dialog_get_settings (ScreenshotSaveDialog* self)
{
	GSettings* result;
	GSettings* _tmp0_;
#line 25 "../src/SaveDialog.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 25 "../src/SaveDialog.vala"
	_tmp0_ = self->priv->_settings;
#line 25 "../src/SaveDialog.vala"
	result = _tmp0_;
#line 25 "../src/SaveDialog.vala"
	return result;
#line 395 "SaveDialog.c"
}

static void
screenshot_save_dialog_set_settings (ScreenshotSaveDialog* self,
                                     GSettings* value)
{
	GSettings* old_value;
#line 25 "../src/SaveDialog.vala"
	g_return_if_fail (self != NULL);
#line 25 "../src/SaveDialog.vala"
	old_value = screenshot_save_dialog_get_settings (self);
#line 25 "../src/SaveDialog.vala"
	if (old_value != value) {
#line 409 "SaveDialog.c"
		GSettings* _tmp0_;
#line 25 "../src/SaveDialog.vala"
		_tmp0_ = _g_object_ref0 (value);
#line 25 "../src/SaveDialog.vala"
		_g_object_unref0 (self->priv->_settings);
#line 25 "../src/SaveDialog.vala"
		self->priv->_settings = _tmp0_;
#line 25 "../src/SaveDialog.vala"
		g_object_notify_by_pspec ((GObject *) self, screenshot_save_dialog_properties[SCREENSHOT_SAVE_DIALOG_SETTINGS_PROPERTY]);
#line 419 "SaveDialog.c"
	}
}

static void
g_cclosure_user_marshal_VOID__BOOLEAN_STRING_STRING_STRING (GClosure * closure,
                                                            GValue * return_value,
                                                            guint n_param_values,
                                                            const GValue * param_values,
                                                            gpointer invocation_hint,
                                                            gpointer marshal_data)
{
	typedef void (*GMarshalFunc_VOID__BOOLEAN_STRING_STRING_STRING) (gpointer data1, gboolean arg_1, const char* arg_2, const char* arg_3, const char* arg_4, gpointer data2);
	register GMarshalFunc_VOID__BOOLEAN_STRING_STRING_STRING callback;
	register GCClosure * cc;
	register gpointer data1;
	register gpointer data2;
	cc = (GCClosure *) closure;
#line 23 "../src/SaveDialog.vala"
	g_return_if_fail (n_param_values == 5);
#line 23 "../src/SaveDialog.vala"
	if (G_CCLOSURE_SWAP_DATA (closure)) {
#line 23 "../src/SaveDialog.vala"
		data1 = closure->data;
#line 23 "../src/SaveDialog.vala"
		data2 = param_values->data[0].v_pointer;
#line 445 "SaveDialog.c"
	} else {
#line 23 "../src/SaveDialog.vala"
		data1 = param_values->data[0].v_pointer;
#line 23 "../src/SaveDialog.vala"
		data2 = closure->data;
#line 451 "SaveDialog.c"
	}
#line 23 "../src/SaveDialog.vala"
	callback = (GMarshalFunc_VOID__BOOLEAN_STRING_STRING_STRING) (marshal_data ? marshal_data : cc->callback);
#line 23 "../src/SaveDialog.vala"
	callback (data1, g_value_get_boolean (param_values + 1), g_value_get_string (param_values + 2), g_value_get_string (param_values + 3), g_value_get_string (param_values + 4), data2);
#line 457 "SaveDialog.c"
}

static Block2Data*
block2_data_ref (Block2Data* _data2_)
{
#line 42 "../src/SaveDialog.vala"
	g_atomic_int_inc (&_data2_->_ref_count_);
#line 42 "../src/SaveDialog.vala"
	return _data2_;
#line 467 "SaveDialog.c"
}

static void
block2_data_unref (void * _userdata_)
{
	Block2Data* _data2_;
	_data2_ = (Block2Data*) _userdata_;
#line 42 "../src/SaveDialog.vala"
	if (g_atomic_int_dec_and_test (&_data2_->_ref_count_)) {
#line 477 "SaveDialog.c"
		ScreenshotSaveDialog* self;
#line 42 "../src/SaveDialog.vala"
		self = _data2_->self;
#line 42 "../src/SaveDialog.vala"
		_g_object_unref0 (_data2_->save_btn);
#line 42 "../src/SaveDialog.vala"
		_g_object_unref0 (_data2_->location_dialog);
#line 42 "../src/SaveDialog.vala"
		_g_object_unref0 (_data2_->format_cmb);
#line 42 "../src/SaveDialog.vala"
		_g_object_unref0 (_data2_->name_message_revealer);
#line 42 "../src/SaveDialog.vala"
		_g_object_unref0 (_data2_->validation_label);
#line 42 "../src/SaveDialog.vala"
		_g_object_unref0 (_data2_->name_entry);
#line 42 "../src/SaveDialog.vala"
		_g_free0 (_data2_->file_name);
#line 42 "../src/SaveDialog.vala"
		_g_free0 (_data2_->folder_dir);
#line 42 "../src/SaveDialog.vala"
		_g_object_unref0 (self);
#line 42 "../src/SaveDialog.vala"
		g_slice_free (Block2Data, _data2_);
#line 501 "SaveDialog.c"
	}
}

static gboolean
string_contains (const gchar* self,
                 const gchar* needle)
{
	gchar* _tmp0_;
	gboolean result;
#line 1584 "glib-2.0.vapi"
	g_return_val_if_fail (self != NULL, FALSE);
#line 1584 "glib-2.0.vapi"
	g_return_val_if_fail (needle != NULL, FALSE);
#line 1585 "glib-2.0.vapi"
	_tmp0_ = strstr ((gchar*) self, (gchar*) needle);
#line 1585 "glib-2.0.vapi"
	result = _tmp0_ != NULL;
#line 1585 "glib-2.0.vapi"
	return result;
#line 521 "SaveDialog.c"
}

static void
_screenshot_save_dialog___lambda7_ (Block2Data* _data2_)
{
	ScreenshotSaveDialog* self;
	GraniteValidatedEntry* _tmp0_;
	const gchar* _tmp1_;
	const gchar* _tmp2_;
	gint _tmp3_;
	gint _tmp4_;
	GtkRevealer* _tmp13_;
	GraniteValidatedEntry* _tmp14_;
	gboolean _tmp15_;
	gboolean _tmp16_;
	GtkButton* _tmp17_;
	GraniteValidatedEntry* _tmp18_;
	gboolean _tmp19_;
	gboolean _tmp20_;
#line 193 "../src/SaveDialog.vala"
	self = _data2_->self;
#line 194 "../src/SaveDialog.vala"
	_tmp0_ = _data2_->name_entry;
#line 194 "../src/SaveDialog.vala"
	_tmp1_ = gtk_editable_get_text ((GtkEditable*) _tmp0_);
#line 194 "../src/SaveDialog.vala"
	_tmp2_ = _tmp1_;
#line 194 "../src/SaveDialog.vala"
	_tmp3_ = strlen (_tmp2_);
#line 194 "../src/SaveDialog.vala"
	_tmp4_ = _tmp3_;
#line 194 "../src/SaveDialog.vala"
	if (_tmp4_ == 0) {
#line 555 "SaveDialog.c"
		GtkLabel* _tmp5_;
		GraniteValidatedEntry* _tmp6_;
#line 195 "../src/SaveDialog.vala"
		_tmp5_ = _data2_->validation_label;
#line 195 "../src/SaveDialog.vala"
		gtk_label_set_label (_tmp5_, _ ("Filename can't be blank"));
#line 196 "../src/SaveDialog.vala"
		_tmp6_ = _data2_->name_entry;
#line 196 "../src/SaveDialog.vala"
		granite_validated_entry_set_is_valid (_tmp6_, FALSE);
#line 566 "SaveDialog.c"
	} else {
		GraniteValidatedEntry* _tmp7_;
		const gchar* _tmp8_;
		const gchar* _tmp9_;
#line 197 "../src/SaveDialog.vala"
		_tmp7_ = _data2_->name_entry;
#line 197 "../src/SaveDialog.vala"
		_tmp8_ = gtk_editable_get_text ((GtkEditable*) _tmp7_);
#line 197 "../src/SaveDialog.vala"
		_tmp9_ = _tmp8_;
#line 197 "../src/SaveDialog.vala"
		if (string_contains (_tmp9_, "/")) {
#line 579 "SaveDialog.c"
			GtkLabel* _tmp10_;
			GraniteValidatedEntry* _tmp11_;
#line 198 "../src/SaveDialog.vala"
			_tmp10_ = _data2_->validation_label;
#line 198 "../src/SaveDialog.vala"
			gtk_label_set_label (_tmp10_, _ ("Filename can't contain “/”"));
#line 199 "../src/SaveDialog.vala"
			_tmp11_ = _data2_->name_entry;
#line 199 "../src/SaveDialog.vala"
			granite_validated_entry_set_is_valid (_tmp11_, FALSE);
#line 590 "SaveDialog.c"
		} else {
			GraniteValidatedEntry* _tmp12_;
#line 201 "../src/SaveDialog.vala"
			_tmp12_ = _data2_->name_entry;
#line 201 "../src/SaveDialog.vala"
			granite_validated_entry_set_is_valid (_tmp12_, TRUE);
#line 597 "SaveDialog.c"
		}
	}
#line 204 "../src/SaveDialog.vala"
	_tmp13_ = _data2_->name_message_revealer;
#line 204 "../src/SaveDialog.vala"
	_tmp14_ = _data2_->name_entry;
#line 204 "../src/SaveDialog.vala"
	_tmp15_ = granite_validated_entry_get_is_valid (_tmp14_);
#line 204 "../src/SaveDialog.vala"
	_tmp16_ = _tmp15_;
#line 204 "../src/SaveDialog.vala"
	gtk_revealer_set_reveal_child (_tmp13_, !_tmp16_);
#line 205 "../src/SaveDialog.vala"
	_tmp17_ = _data2_->save_btn;
#line 205 "../src/SaveDialog.vala"
	_tmp18_ = _data2_->name_entry;
#line 205 "../src/SaveDialog.vala"
	_tmp19_ = granite_validated_entry_get_is_valid (_tmp18_);
#line 205 "../src/SaveDialog.vala"
	_tmp20_ = _tmp19_;
#line 205 "../src/SaveDialog.vala"
	gtk_widget_set_sensitive ((GtkWidget*) _tmp17_, _tmp20_);
#line 620 "SaveDialog.c"
}

static void
__screenshot_save_dialog___lambda7__gtk_editable_changed (GtkEditable* _sender,
                                                          gpointer self)
{
#line 193 "../src/SaveDialog.vala"
	_screenshot_save_dialog___lambda7_ (self);
#line 629 "SaveDialog.c"
}

static void
_screenshot_save_dialog___lambda8_ (Block2Data* _data2_)
{
	ScreenshotSaveDialog* self;
	const gchar* _tmp0_;
	GraniteValidatedEntry* _tmp1_;
	const gchar* _tmp2_;
	GtkComboBoxText* _tmp3_;
	gchar* _tmp4_;
	gchar* _tmp5_;
#line 208 "../src/SaveDialog.vala"
	self = _data2_->self;
#line 209 "../src/SaveDialog.vala"
	_tmp0_ = _data2_->folder_dir;
#line 209 "../src/SaveDialog.vala"
	_tmp1_ = _data2_->name_entry;
#line 209 "../src/SaveDialog.vala"
	_tmp2_ = gtk_editable_get_text ((GtkEditable*) _tmp1_);
#line 209 "../src/SaveDialog.vala"
	_tmp3_ = _data2_->format_cmb;
#line 209 "../src/SaveDialog.vala"
	_tmp4_ = gtk_combo_box_text_get_active_text (_tmp3_);
#line 209 "../src/SaveDialog.vala"
	_tmp5_ = _tmp4_;
#line 209 "../src/SaveDialog.vala"
	g_signal_emit (self, screenshot_save_dialog_signals[SCREENSHOT_SAVE_DIALOG_SAVE_RESPONSE_SIGNAL], 0, TRUE, _tmp0_, _tmp2_, _tmp5_);
#line 209 "../src/SaveDialog.vala"
	_g_free0 (_tmp5_);
#line 660 "SaveDialog.c"
}

static void
__screenshot_save_dialog___lambda8__gtk_button_clicked (GtkButton* _sender,
                                                        gpointer self)
{
#line 208 "../src/SaveDialog.vala"
	_screenshot_save_dialog___lambda8_ (self);
#line 669 "SaveDialog.c"
}

static void
_screenshot_save_dialog___lambda9_ (ScreenshotSaveDialog* self)
{
	GdkDisplay* _tmp0_;
	GdkClipboard* _tmp1_;
	GdkPixbuf* _tmp2_;
	GdkTexture* _tmp3_;
	GdkTexture* _tmp4_;
#line 213 "../src/SaveDialog.vala"
	_tmp0_ = gdk_display_get_default ();
#line 213 "../src/SaveDialog.vala"
	_tmp1_ = gdk_display_get_clipboard (_tmp0_);
#line 213 "../src/SaveDialog.vala"
	_tmp2_ = self->priv->_pixbuf;
#line 213 "../src/SaveDialog.vala"
	_tmp3_ = gdk_texture_new_for_pixbuf (_tmp2_);
#line 213 "../src/SaveDialog.vala"
	_tmp4_ = _tmp3_;
#line 213 "../src/SaveDialog.vala"
	gdk_clipboard_set_texture (_tmp1_, _tmp4_);
#line 213 "../src/SaveDialog.vala"
	_g_object_unref0 (_tmp4_);
#line 214 "../src/SaveDialog.vala"
	screenshot_save_dialog_hide_destroy (self);
#line 696 "SaveDialog.c"
}

static void
__screenshot_save_dialog___lambda9__gtk_button_clicked (GtkButton* _sender,
                                                        gpointer self)
{
#line 212 "../src/SaveDialog.vala"
	_screenshot_save_dialog___lambda9_ ((ScreenshotSaveDialog*) self);
#line 705 "SaveDialog.c"
}

static void
_screenshot_save_dialog___lambda10_ (Block2Data* _data2_)
{
	ScreenshotSaveDialog* self;
	const gchar* _tmp0_;
	const gchar* _tmp1_;
	GtkComboBoxText* _tmp2_;
	gchar* _tmp3_;
	gchar* _tmp4_;
#line 217 "../src/SaveDialog.vala"
	self = _data2_->self;
#line 218 "../src/SaveDialog.vala"
	_tmp0_ = _data2_->folder_dir;
#line 218 "../src/SaveDialog.vala"
	_tmp1_ = _data2_->file_name;
#line 218 "../src/SaveDialog.vala"
	_tmp2_ = _data2_->format_cmb;
#line 218 "../src/SaveDialog.vala"
	_tmp3_ = gtk_combo_box_text_get_active_text (_tmp2_);
#line 218 "../src/SaveDialog.vala"
	_tmp4_ = _tmp3_;
#line 218 "../src/SaveDialog.vala"
	g_signal_emit (self, screenshot_save_dialog_signals[SCREENSHOT_SAVE_DIALOG_SAVE_RESPONSE_SIGNAL], 0, FALSE, _tmp0_, _tmp1_, _tmp4_);
#line 218 "../src/SaveDialog.vala"
	_g_free0 (_tmp4_);
#line 733 "SaveDialog.c"
}

static void
__screenshot_save_dialog___lambda10__gtk_button_clicked (GtkButton* _sender,
                                                         gpointer self)
{
#line 217 "../src/SaveDialog.vala"
	_screenshot_save_dialog___lambda10_ (self);
#line 742 "SaveDialog.c"
}

static void
_screenshot_save_dialog___lambda11_ (Block2Data* _data2_)
{
	ScreenshotSaveDialog* self;
	GSettings* _tmp0_;
	GtkComboBoxText* _tmp1_;
	gchar* _tmp2_;
	gchar* _tmp3_;
#line 221 "../src/SaveDialog.vala"
	self = _data2_->self;
#line 222 "../src/SaveDialog.vala"
	_tmp0_ = self->priv->_settings;
#line 222 "../src/SaveDialog.vala"
	_tmp1_ = _data2_->format_cmb;
#line 222 "../src/SaveDialog.vala"
	_tmp2_ = gtk_combo_box_text_get_active_text (_tmp1_);
#line 222 "../src/SaveDialog.vala"
	_tmp3_ = _tmp2_;
#line 222 "../src/SaveDialog.vala"
	g_settings_set_string (_tmp0_, "format", _tmp3_);
#line 222 "../src/SaveDialog.vala"
	_g_free0 (_tmp3_);
#line 767 "SaveDialog.c"
}

static void
__screenshot_save_dialog___lambda11__gtk_combo_box_changed (GtkComboBox* _sender,
                                                            gpointer self)
{
#line 221 "../src/SaveDialog.vala"
	_screenshot_save_dialog___lambda11_ (self);
#line 776 "SaveDialog.c"
}

static void
_screenshot_save_dialog___lambda12_ (Block2Data* _data2_)
{
	ScreenshotSaveDialog* self;
	GtkFileChooserNative* _tmp0_;
#line 225 "../src/SaveDialog.vala"
	self = _data2_->self;
#line 226 "../src/SaveDialog.vala"
	_tmp0_ = _data2_->location_dialog;
#line 226 "../src/SaveDialog.vala"
	gtk_native_dialog_show ((GtkNativeDialog*) _tmp0_);
#line 790 "SaveDialog.c"
}

static void
__screenshot_save_dialog___lambda12__gtk_button_clicked (GtkButton* _sender,
                                                         gpointer self)
{
#line 225 "../src/SaveDialog.vala"
	_screenshot_save_dialog___lambda12_ (self);
#line 799 "SaveDialog.c"
}

static void
_screenshot_save_dialog___lambda13_ (Block2Data* _data2_,
                                     gint response)
{
	ScreenshotSaveDialog* self;
#line 229 "../src/SaveDialog.vala"
	self = _data2_->self;
#line 230 "../src/SaveDialog.vala"
	if (response == ((gint) GTK_RESPONSE_ACCEPT)) {
#line 811 "SaveDialog.c"
		gchar* file_path = NULL;
		GtkFileChooserNative* _tmp0_;
		GFile* _tmp1_;
		GFile* _tmp2_;
		gchar* _tmp3_;
		gchar* _tmp4_;
		GSettings* _tmp5_;
		const gchar* _tmp6_;
		const gchar* _tmp7_;
#line 231 "../src/SaveDialog.vala"
		_tmp0_ = _data2_->location_dialog;
#line 231 "../src/SaveDialog.vala"
		_tmp1_ = gtk_file_chooser_get_file ((GtkFileChooser*) _tmp0_);
#line 231 "../src/SaveDialog.vala"
		_tmp2_ = _tmp1_;
#line 231 "../src/SaveDialog.vala"
		_tmp3_ = g_file_get_path (_tmp2_);
#line 231 "../src/SaveDialog.vala"
		_tmp4_ = _tmp3_;
#line 231 "../src/SaveDialog.vala"
		_g_object_unref0 (_tmp2_);
#line 231 "../src/SaveDialog.vala"
		file_path = _tmp4_;
#line 232 "../src/SaveDialog.vala"
		_tmp5_ = self->priv->_settings;
#line 232 "../src/SaveDialog.vala"
		_tmp6_ = file_path;
#line 232 "../src/SaveDialog.vala"
		g_settings_set_string (_tmp5_, "folder-dir", _tmp6_);
#line 233 "../src/SaveDialog.vala"
		_tmp7_ = file_path;
#line 233 "../src/SaveDialog.vala"
		screenshot_save_dialog_update_location_button (self, _tmp7_);
#line 230 "../src/SaveDialog.vala"
		_g_free0 (file_path);
#line 847 "SaveDialog.c"
	}
}

static void
__screenshot_save_dialog___lambda13__gtk_native_dialog_response (GtkNativeDialog* _sender,
                                                                 gint response_id,
                                                                 gpointer self)
{
#line 229 "../src/SaveDialog.vala"
	_screenshot_save_dialog___lambda13_ (self, response_id);
#line 858 "SaveDialog.c"
}

static GObject *
screenshot_save_dialog_constructor (GType type,
                                    guint n_construct_properties,
                                    GObjectConstructParam * construct_properties)
{
	GObject * obj;
	GObjectClass * parent_class;
	ScreenshotSaveDialog * self;
	Block2Data* _data2_;
	const gchar* _tmp0_;
	gchar* _tmp1_;
	gchar* _tmp2_;
	gchar* _tmp3_;
	gchar* _tmp4_;
	gchar* _tmp5_;
	gchar* _tmp6_;
	gchar* folder_from_settings = NULL;
	GSettings* _tmp7_;
	gchar* _tmp8_;
	gboolean _tmp9_ = FALSE;
	const gchar* _tmp10_;
	const gchar* _tmp11_;
	const gchar* _tmp15_;
	GtkDragSource* drag_source = NULL;
	GdkPixbuf* _tmp16_;
	GValue _tmp17_ = {0};
	GdkContentProvider* _tmp18_;
	GtkDragSource* _tmp19_ = NULL;
	GtkDragSource* _tmp20_;
	GtkDragSource* _tmp21_;
	GdkDisplay* _tmp22_;
	GtkIconTheme* _tmp23_;
	gint _tmp24_;
	gint _tmp25_;
	GtkIconPaintable* _tmp26_;
	GtkIconPaintable* _tmp27_;
	GtkPicture* preview = NULL;
	GdkPixbuf* _tmp28_;
	GdkTexture* _tmp29_;
	GdkTexture* _tmp30_;
	GtkPicture* _tmp31_ = NULL;
	GtkPicture* _tmp32_;
	GtkPicture* _tmp33_;
	GtkPicture* _tmp34_;
	GtkPicture* _tmp35_;
	GtkPicture* _tmp36_;
	GtkDragSource* _tmp37_;
	GtkEventController* _tmp38_;
	GraniteHeaderLabel* dialog_label = NULL;
	GraniteHeaderLabel* _tmp39_;
	gchar* date_time = NULL;
	GDateTime* _tmp40_;
	GDateTime* _tmp41_;
	gchar* _tmp42_;
	gchar* _tmp43_;
	const gchar* _tmp44_;
	gchar* _tmp45_;
	gint _tmp46_;
	gint _tmp47_;
	GraniteHeaderLabel* name_label = NULL;
	GraniteHeaderLabel* _tmp54_;
	const gchar* _tmp55_;
	gchar* _tmp56_;
	GraniteValidatedEntry* _tmp57_ = NULL;
	GraniteValidatedEntry* _tmp58_;
	GtkLabel* _tmp59_ = NULL;
	GtkLabel* _tmp60_;
	GtkLabel* _tmp61_;
	GtkLabel* _tmp62_;
	GtkWidget* _tmp63_;
	GtkRevealer* _tmp64_ = NULL;
	GraniteHeaderLabel* format_label = NULL;
	GraniteHeaderLabel* _tmp65_;
	GtkComboBoxText* _tmp66_;
	GtkComboBoxText* _tmp67_;
	GtkComboBoxText* _tmp68_;
	GtkComboBoxText* _tmp69_;
	GtkComboBoxText* _tmp70_;
	GSettings* _tmp71_;
	gchar* _tmp72_;
	gchar* _tmp73_;
	GQuark _tmp75_ = 0U;
#line 123 "../src/SaveDialog.vala"
	static GQuark _tmp74_label0 = 0;
#line 123 "../src/SaveDialog.vala"
	static GQuark _tmp74_label1 = 0;
#line 123 "../src/SaveDialog.vala"
	static GQuark _tmp74_label2 = 0;
#line 123 "../src/SaveDialog.vala"
	static GQuark _tmp74_label3 = 0;
#line 951 "SaveDialog.c"
	GraniteHeaderLabel* location_label = NULL;
	GraniteHeaderLabel* _tmp80_ = NULL;
	GtkLabel* _tmp81_ = NULL;
	GtkImage* _tmp82_;
	const gchar* _tmp83_;
	GtkImage* arrow = NULL;
	GtkImage* _tmp84_;
	GtkBox* location_button_indicator = NULL;
	GtkBox* _tmp85_;
	GtkBox* _tmp86_;
	GtkImage* _tmp87_;
	GtkBox* _tmp88_;
	GtkLabel* _tmp89_;
	GtkBox* _tmp90_;
	GtkImage* _tmp91_;
	GtkButton* location_button = NULL;
	GtkBox* _tmp92_;
	GtkWidget* _tmp93_;
	GtkButton* _tmp94_ = NULL;
	GtkFileChooserNative* _tmp95_;
	GtkFileChooserNative* _tmp96_;
	const gchar* _tmp97_;
	GFile* _tmp98_;
	GFile* _tmp99_;
	GtkBox* content = NULL;
	GtkBox* _tmp100_;
	GtkBox* _tmp101_;
	GtkBox* _tmp102_;
	GraniteHeaderLabel* _tmp103_;
	GtkBox* _tmp104_;
	GtkPicture* _tmp105_;
	GtkBox* _tmp106_;
	GraniteHeaderLabel* _tmp107_;
	GtkBox* _tmp108_;
	GraniteValidatedEntry* _tmp109_;
	GtkBox* _tmp110_;
	GtkRevealer* _tmp111_;
	GtkBox* _tmp112_;
	GraniteHeaderLabel* _tmp113_;
	GtkBox* _tmp114_;
	GtkComboBoxText* _tmp115_;
	GtkBox* _tmp116_;
	GraniteHeaderLabel* _tmp117_;
	GtkBox* _tmp118_;
	GtkButton* _tmp119_;
	GtkButton* clipboard_btn = NULL;
	GtkWidget* _tmp120_;
	GtkButton* _tmp121_;
	GtkButton* retry_btn = NULL;
	GtkWidget* _tmp122_;
	GtkButton* _tmp123_;
	GtkWidget* _tmp124_;
	GtkButton* _tmp125_;
	GtkButton* _tmp126_;
	GtkButton* _tmp127_;
	GraniteValidatedEntry* _tmp128_;
	GtkButton* _tmp129_;
	GtkButton* _tmp130_;
	GtkButton* _tmp131_;
	GtkComboBoxText* _tmp132_;
	GtkButton* _tmp133_;
	GtkFileChooserNative* _tmp134_;
	GError* _inner_error0_ = NULL;
#line 42 "../src/SaveDialog.vala"
	parent_class = G_OBJECT_CLASS (screenshot_save_dialog_parent_class);
#line 42 "../src/SaveDialog.vala"
	obj = parent_class->constructor (type, n_construct_properties, construct_properties);
#line 42 "../src/SaveDialog.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, SCREENSHOT_TYPE_SAVE_DIALOG, ScreenshotSaveDialog);
#line 42 "../src/SaveDialog.vala"
	_data2_ = g_slice_new0 (Block2Data);
#line 42 "../src/SaveDialog.vala"
	_data2_->_ref_count_ = 1;
#line 42 "../src/SaveDialog.vala"
	_data2_->self = g_object_ref (self);
#line 43 "../src/SaveDialog.vala"
	_tmp0_ = g_get_user_special_dir (G_USER_DIRECTORY_PICTURES);
#line 43 "../src/SaveDialog.vala"
	_tmp1_ = g_strdup_printf ("%c", (gint) G_DIR_SEPARATOR);
#line 43 "../src/SaveDialog.vala"
	_tmp2_ = _tmp1_;
#line 43 "../src/SaveDialog.vala"
	_tmp3_ = g_strconcat (_tmp0_, _tmp2_, NULL);
#line 43 "../src/SaveDialog.vala"
	_tmp4_ = _tmp3_;
#line 43 "../src/SaveDialog.vala"
	_tmp5_ = g_strconcat (_tmp4_, SCREENSHOT_APPLICATION_SAVE_FOLDER, NULL);
#line 43 "../src/SaveDialog.vala"
	_tmp6_ = _tmp5_;
#line 43 "../src/SaveDialog.vala"
	_g_free0 (_tmp4_);
#line 43 "../src/SaveDialog.vala"
	_g_free0 (_tmp2_);
#line 43 "../src/SaveDialog.vala"
	_data2_->folder_dir = _tmp6_;
#line 46 "../src/SaveDialog.vala"
	_tmp7_ = self->priv->_settings;
#line 46 "../src/SaveDialog.vala"
	_tmp8_ = g_settings_get_string (_tmp7_, "folder-dir");
#line 46 "../src/SaveDialog.vala"
	folder_from_settings = _tmp8_;
#line 48 "../src/SaveDialog.vala"
	_tmp10_ = folder_from_settings;
#line 48 "../src/SaveDialog.vala"
	_tmp11_ = _data2_->folder_dir;
#line 48 "../src/SaveDialog.vala"
	if (g_strcmp0 (_tmp10_, _tmp11_) != 0) {
#line 1059 "SaveDialog.c"
		const gchar* _tmp12_;
#line 48 "../src/SaveDialog.vala"
		_tmp12_ = folder_from_settings;
#line 48 "../src/SaveDialog.vala"
		_tmp9_ = g_strcmp0 (_tmp12_, "") != 0;
#line 1065 "SaveDialog.c"
	} else {
#line 48 "../src/SaveDialog.vala"
		_tmp9_ = FALSE;
#line 1069 "SaveDialog.c"
	}
#line 48 "../src/SaveDialog.vala"
	if (_tmp9_) {
#line 1073 "SaveDialog.c"
		const gchar* _tmp13_;
		gchar* _tmp14_;
#line 49 "../src/SaveDialog.vala"
		_tmp13_ = folder_from_settings;
#line 49 "../src/SaveDialog.vala"
		_tmp14_ = g_strdup (_tmp13_);
#line 49 "../src/SaveDialog.vala"
		_g_free0 (_data2_->folder_dir);
#line 49 "../src/SaveDialog.vala"
		_data2_->folder_dir = _tmp14_;
#line 1084 "SaveDialog.c"
	}
#line 52 "../src/SaveDialog.vala"
	_tmp15_ = _data2_->folder_dir;
#line 52 "../src/SaveDialog.vala"
	screenshot_application_create_dir_if_missing (_tmp15_);
#line 54 "../src/SaveDialog.vala"
	_tmp16_ = self->priv->_pixbuf;
#line 54 "../src/SaveDialog.vala"
	g_value_init (&_tmp17_, gdk_pixbuf_get_type ());
#line 54 "../src/SaveDialog.vala"
	g_value_set_object (&_tmp17_, _tmp16_);
#line 54 "../src/SaveDialog.vala"
	_tmp18_ = gdk_content_provider_new_for_value (&_tmp17_);
#line 54 "../src/SaveDialog.vala"
	_tmp19_ = gtk_drag_source_new ();
#line 54 "../src/SaveDialog.vala"
	gtk_drag_source_set_actions (_tmp19_, GDK_ACTION_COPY);
#line 54 "../src/SaveDialog.vala"
	gtk_drag_source_set_content (_tmp19_, _tmp18_);
#line 54 "../src/SaveDialog.vala"
	_g_object_unref0 (_tmp18_);
#line 54 "../src/SaveDialog.vala"
	_tmp20_ = _tmp19_;
#line 54 "../src/SaveDialog.vala"
	G_IS_VALUE (&_tmp17_) ? (g_value_unset (&_tmp17_), NULL) : NULL;
#line 54 "../src/SaveDialog.vala"
	drag_source = _tmp20_;
#line 58 "../src/SaveDialog.vala"
	_tmp21_ = drag_source;
#line 58 "../src/SaveDialog.vala"
	_tmp22_ = gdk_display_get_default ();
#line 58 "../src/SaveDialog.vala"
	_tmp23_ = gtk_icon_theme_get_for_display (_tmp22_);
#line 58 "../src/SaveDialog.vala"
	_tmp24_ = gtk_widget_get_scale_factor ((GtkWidget*) self);
#line 58 "../src/SaveDialog.vala"
	_tmp25_ = _tmp24_;
#line 58 "../src/SaveDialog.vala"
	_tmp26_ = gtk_icon_theme_lookup_icon (_tmp23_, "image-x-generic", NULL, 32, _tmp25_, GTK_TEXT_DIR_NONE, GTK_ICON_LOOKUP_PRELOAD);
#line 58 "../src/SaveDialog.vala"
	_tmp27_ = _tmp26_;
#line 58 "../src/SaveDialog.vala"
	gtk_drag_source_set_icon (_tmp21_, (GdkPaintable*) _tmp27_, 0, 0);
#line 58 "../src/SaveDialog.vala"
	_g_object_unref0 (_tmp27_);
#line 69 "../src/SaveDialog.vala"
	_tmp28_ = self->priv->_pixbuf;
#line 69 "../src/SaveDialog.vala"
	_tmp29_ = gdk_texture_new_for_pixbuf (_tmp28_);
#line 69 "../src/SaveDialog.vala"
	_tmp30_ = _tmp29_;
#line 69 "../src/SaveDialog.vala"
	_tmp31_ = (GtkPicture*) gtk_picture_new_for_paintable ((GdkPaintable*) _tmp30_);
#line 69 "../src/SaveDialog.vala"
	g_object_set ((GtkWidget*) _tmp31_, "height-request", 128, NULL);
#line 69 "../src/SaveDialog.vala"
	gtk_widget_set_margin_top ((GtkWidget*) _tmp31_, 18);
#line 69 "../src/SaveDialog.vala"
	gtk_widget_set_margin_bottom ((GtkWidget*) _tmp31_, 18);
#line 69 "../src/SaveDialog.vala"
	g_object_ref_sink (_tmp31_);
#line 69 "../src/SaveDialog.vala"
	_tmp32_ = _tmp31_;
#line 69 "../src/SaveDialog.vala"
	_g_object_unref0 (_tmp30_);
#line 69 "../src/SaveDialog.vala"
	preview = _tmp32_;
#line 74 "../src/SaveDialog.vala"
	_tmp33_ = preview;
#line 74 "../src/SaveDialog.vala"
	gtk_widget_add_css_class ((GtkWidget*) _tmp33_, GRANITE_STYLE_CLASS_CARD);
#line 75 "../src/SaveDialog.vala"
	_tmp34_ = preview;
#line 75 "../src/SaveDialog.vala"
	gtk_widget_add_css_class ((GtkWidget*) _tmp34_, GRANITE_STYLE_CLASS_CHECKERBOARD);
#line 76 "../src/SaveDialog.vala"
	_tmp35_ = preview;
#line 76 "../src/SaveDialog.vala"
	gtk_widget_add_css_class ((GtkWidget*) _tmp35_, GRANITE_STYLE_CLASS_ROUNDED);
#line 77 "../src/SaveDialog.vala"
	_tmp36_ = preview;
#line 77 "../src/SaveDialog.vala"
	_tmp37_ = drag_source;
#line 77 "../src/SaveDialog.vala"
	_tmp38_ = _g_object_ref0 ((GtkEventController*) _tmp37_);
#line 77 "../src/SaveDialog.vala"
	gtk_widget_add_controller ((GtkWidget*) _tmp36_, _tmp38_);
#line 79 "../src/SaveDialog.vala"
	_tmp39_ = granite_header_label_new (_ ("Save Image as…"));
#line 79 "../src/SaveDialog.vala"
	g_object_ref_sink (_tmp39_);
#line 79 "../src/SaveDialog.vala"
	dialog_label = _tmp39_;
#line 81 "../src/SaveDialog.vala"
	_tmp40_ = g_date_time_new_now_local ();
#line 81 "../src/SaveDialog.vala"
	_tmp41_ = _tmp40_;
#line 81 "../src/SaveDialog.vala"
	_tmp42_ = g_date_time_format (_tmp41_, "%Y-%m-%d %H.%M.%S");
#line 81 "../src/SaveDialog.vala"
	_tmp43_ = _tmp42_;
#line 81 "../src/SaveDialog.vala"
	_g_date_time_unref0 (_tmp41_);
#line 81 "../src/SaveDialog.vala"
	date_time = _tmp43_;
#line 84 "../src/SaveDialog.vala"
	_tmp44_ = date_time;
#line 84 "../src/SaveDialog.vala"
	_tmp45_ = g_strdup_printf (_ ("Screenshot from %s"), _tmp44_);
#line 84 "../src/SaveDialog.vala"
	_data2_->file_name = _tmp45_;
#line 86 "../src/SaveDialog.vala"
	_tmp46_ = gtk_widget_get_scale_factor ((GtkWidget*) self);
#line 86 "../src/SaveDialog.vala"
	_tmp47_ = _tmp46_;
#line 86 "../src/SaveDialog.vala"
	if (_tmp47_ > 1) {
#line 1202 "SaveDialog.c"
		const gchar* _tmp48_;
		gint _tmp49_;
		gint _tmp50_;
		gchar* _tmp51_;
		gchar* _tmp52_;
		gchar* _tmp53_;
#line 87 "../src/SaveDialog.vala"
		_tmp48_ = _data2_->file_name;
#line 87 "../src/SaveDialog.vala"
		_tmp49_ = gtk_widget_get_scale_factor ((GtkWidget*) self);
#line 87 "../src/SaveDialog.vala"
		_tmp50_ = _tmp49_;
#line 87 "../src/SaveDialog.vala"
		_tmp51_ = g_strdup_printf ("@%ix", _tmp50_);
#line 87 "../src/SaveDialog.vala"
		_tmp52_ = _tmp51_;
#line 87 "../src/SaveDialog.vala"
		_tmp53_ = g_strconcat (_tmp48_, _tmp52_, NULL);
#line 87 "../src/SaveDialog.vala"
		_g_free0 (_data2_->file_name);
#line 87 "../src/SaveDialog.vala"
		_data2_->file_name = _tmp53_;
#line 87 "../src/SaveDialog.vala"
		_g_free0 (_tmp52_);
#line 1227 "SaveDialog.c"
	}
#line 90 "../src/SaveDialog.vala"
	_tmp54_ = granite_header_label_new (_ ("Name"));
#line 90 "../src/SaveDialog.vala"
	g_object_ref_sink (_tmp54_);
#line 90 "../src/SaveDialog.vala"
	name_label = _tmp54_;
#line 92 "../src/SaveDialog.vala"
	_tmp55_ = _data2_->file_name;
#line 92 "../src/SaveDialog.vala"
	_tmp56_ = g_strdup (_tmp55_);
#line 92 "../src/SaveDialog.vala"
	_tmp57_ = granite_validated_entry_new ();
#line 92 "../src/SaveDialog.vala"
	gtk_entry_set_activates_default ((GtkEntry*) _tmp57_, TRUE);
#line 92 "../src/SaveDialog.vala"
	gtk_widget_set_hexpand ((GtkWidget*) _tmp57_, TRUE);
#line 92 "../src/SaveDialog.vala"
	gtk_editable_set_text ((GtkEditable*) _tmp57_, _tmp56_);
#line 92 "../src/SaveDialog.vala"
	_g_free0 (_tmp56_);
#line 92 "../src/SaveDialog.vala"
	g_object_ref_sink (_tmp57_);
#line 92 "../src/SaveDialog.vala"
	_data2_->name_entry = _tmp57_;
#line 97 "../src/SaveDialog.vala"
	_tmp58_ = _data2_->name_entry;
#line 97 "../src/SaveDialog.vala"
	gtk_widget_grab_focus ((GtkWidget*) _tmp58_);
#line 99 "../src/SaveDialog.vala"
	_tmp59_ = (GtkLabel*) gtk_label_new ("");
#line 99 "../src/SaveDialog.vala"
	gtk_widget_set_halign ((GtkWidget*) _tmp59_, GTK_ALIGN_END);
#line 99 "../src/SaveDialog.vala"
	gtk_label_set_justify (_tmp59_, GTK_JUSTIFY_RIGHT);
#line 99 "../src/SaveDialog.vala"
	gtk_label_set_max_width_chars (_tmp59_, 55);
#line 99 "../src/SaveDialog.vala"
	gtk_label_set_wrap (_tmp59_, TRUE);
#line 99 "../src/SaveDialog.vala"
	gtk_label_set_xalign (_tmp59_, (gfloat) 1);
#line 99 "../src/SaveDialog.vala"
	g_object_ref_sink (_tmp59_);
#line 99 "../src/SaveDialog.vala"
	_data2_->validation_label = _tmp59_;
#line 106 "../src/SaveDialog.vala"
	_tmp60_ = _data2_->validation_label;
#line 106 "../src/SaveDialog.vala"
	gtk_widget_add_css_class ((GtkWidget*) _tmp60_, GRANITE_STYLE_CLASS_SMALL_LABEL);
#line 107 "../src/SaveDialog.vala"
	_tmp61_ = _data2_->validation_label;
#line 107 "../src/SaveDialog.vala"
	gtk_widget_add_css_class ((GtkWidget*) _tmp61_, GRANITE_STYLE_CLASS_ERROR);
#line 109 "../src/SaveDialog.vala"
	_tmp62_ = _data2_->validation_label;
#line 109 "../src/SaveDialog.vala"
	_tmp63_ = _g_object_ref0 ((GtkWidget*) _tmp62_);
#line 109 "../src/SaveDialog.vala"
	_tmp64_ = (GtkRevealer*) gtk_revealer_new ();
#line 109 "../src/SaveDialog.vala"
	gtk_revealer_set_child (_tmp64_, _tmp63_);
#line 109 "../src/SaveDialog.vala"
	_g_object_unref0 (_tmp63_);
#line 109 "../src/SaveDialog.vala"
	gtk_revealer_set_transition_type (_tmp64_, GTK_REVEALER_TRANSITION_TYPE_CROSSFADE);
#line 109 "../src/SaveDialog.vala"
	gtk_widget_set_margin_top ((GtkWidget*) _tmp64_, 3);
#line 109 "../src/SaveDialog.vala"
	g_object_ref_sink (_tmp64_);
#line 109 "../src/SaveDialog.vala"
	_data2_->name_message_revealer = _tmp64_;
#line 115 "../src/SaveDialog.vala"
	_tmp65_ = granite_header_label_new (_ ("File Type"));
#line 115 "../src/SaveDialog.vala"
	g_object_ref_sink (_tmp65_);
#line 115 "../src/SaveDialog.vala"
	format_label = _tmp65_;
#line 117 "../src/SaveDialog.vala"
	_tmp66_ = (GtkComboBoxText*) gtk_combo_box_text_new ();
#line 117 "../src/SaveDialog.vala"
	g_object_ref_sink (_tmp66_);
#line 117 "../src/SaveDialog.vala"
	_data2_->format_cmb = _tmp66_;
#line 118 "../src/SaveDialog.vala"
	_tmp67_ = _data2_->format_cmb;
#line 118 "../src/SaveDialog.vala"
	gtk_combo_box_text_append_text (_tmp67_, "png");
#line 119 "../src/SaveDialog.vala"
	_tmp68_ = _data2_->format_cmb;
#line 119 "../src/SaveDialog.vala"
	gtk_combo_box_text_append_text (_tmp68_, "jpeg");
#line 120 "../src/SaveDialog.vala"
	_tmp69_ = _data2_->format_cmb;
#line 120 "../src/SaveDialog.vala"
	gtk_combo_box_text_append_text (_tmp69_, "bmp");
#line 121 "../src/SaveDialog.vala"
	_tmp70_ = _data2_->format_cmb;
#line 121 "../src/SaveDialog.vala"
	gtk_combo_box_text_append_text (_tmp70_, "tiff");
#line 123 "../src/SaveDialog.vala"
	_tmp71_ = self->priv->_settings;
#line 123 "../src/SaveDialog.vala"
	_tmp72_ = g_settings_get_string (_tmp71_, "format");
#line 123 "../src/SaveDialog.vala"
	_tmp73_ = _tmp72_;
#line 123 "../src/SaveDialog.vala"
	_tmp75_ = (NULL == _tmp73_) ? 0 : g_quark_from_string (_tmp73_);
#line 123 "../src/SaveDialog.vala"
	g_free (_tmp73_);
#line 123 "../src/SaveDialog.vala"
	if (_tmp75_ == ((0 != _tmp74_label0) ? _tmp74_label0 : (_tmp74_label0 = g_quark_from_static_string ("png")))) {
#line 123 "../src/SaveDialog.vala"
		switch (0) {
#line 1341 "SaveDialog.c"
			default:
			{
				GtkComboBoxText* _tmp76_;
#line 125 "../src/SaveDialog.vala"
				_tmp76_ = _data2_->format_cmb;
#line 125 "../src/SaveDialog.vala"
				gtk_combo_box_set_active ((GtkComboBox*) _tmp76_, 0);
#line 126 "../src/SaveDialog.vala"
				break;
#line 1351 "SaveDialog.c"
			}
		}
	} else if (_tmp75_ == ((0 != _tmp74_label1) ? _tmp74_label1 : (_tmp74_label1 = g_quark_from_static_string ("jpeg")))) {
#line 123 "../src/SaveDialog.vala"
		switch (0) {
#line 1357 "SaveDialog.c"
			default:
			{
				GtkComboBoxText* _tmp77_;
#line 128 "../src/SaveDialog.vala"
				_tmp77_ = _data2_->format_cmb;
#line 128 "../src/SaveDialog.vala"
				gtk_combo_box_set_active ((GtkComboBox*) _tmp77_, 1);
#line 129 "../src/SaveDialog.vala"
				break;
#line 1367 "SaveDialog.c"
			}
		}
	} else if (_tmp75_ == ((0 != _tmp74_label2) ? _tmp74_label2 : (_tmp74_label2 = g_quark_from_static_string ("bmp")))) {
#line 123 "../src/SaveDialog.vala"
		switch (0) {
#line 1373 "SaveDialog.c"
			default:
			{
				GtkComboBoxText* _tmp78_;
#line 131 "../src/SaveDialog.vala"
				_tmp78_ = _data2_->format_cmb;
#line 131 "../src/SaveDialog.vala"
				gtk_combo_box_set_active ((GtkComboBox*) _tmp78_, 2);
#line 132 "../src/SaveDialog.vala"
				break;
#line 1383 "SaveDialog.c"
			}
		}
	} else if (_tmp75_ == ((0 != _tmp74_label3) ? _tmp74_label3 : (_tmp74_label3 = g_quark_from_static_string ("tiff")))) {
#line 123 "../src/SaveDialog.vala"
		switch (0) {
#line 1389 "SaveDialog.c"
			default:
			{
				GtkComboBoxText* _tmp79_;
#line 134 "../src/SaveDialog.vala"
				_tmp79_ = _data2_->format_cmb;
#line 134 "../src/SaveDialog.vala"
				gtk_combo_box_set_active ((GtkComboBox*) _tmp79_, 3);
#line 135 "../src/SaveDialog.vala"
				break;
#line 1399 "SaveDialog.c"
			}
		}
	}
#line 138 "../src/SaveDialog.vala"
	_tmp80_ = granite_header_label_new (_ ("Folder"));
#line 138 "../src/SaveDialog.vala"
	gtk_widget_set_margin_top ((GtkWidget*) _tmp80_, 18);
#line 138 "../src/SaveDialog.vala"
	g_object_ref_sink (_tmp80_);
#line 138 "../src/SaveDialog.vala"
	location_label = _tmp80_;
#line 142 "../src/SaveDialog.vala"
	_tmp81_ = (GtkLabel*) gtk_label_new ("");
#line 142 "../src/SaveDialog.vala"
	gtk_widget_set_halign ((GtkWidget*) _tmp81_, GTK_ALIGN_START);
#line 142 "../src/SaveDialog.vala"
	gtk_widget_set_hexpand ((GtkWidget*) _tmp81_, TRUE);
#line 142 "../src/SaveDialog.vala"
	g_object_ref_sink (_tmp81_);
#line 142 "../src/SaveDialog.vala"
	_g_object_unref0 (self->priv->folder_name);
#line 142 "../src/SaveDialog.vala"
	self->priv->folder_name = _tmp81_;
#line 147 "../src/SaveDialog.vala"
	_tmp82_ = (GtkImage*) gtk_image_new ();
#line 147 "../src/SaveDialog.vala"
	g_object_ref_sink (_tmp82_);
#line 147 "../src/SaveDialog.vala"
	_g_object_unref0 (self->priv->folder_image);
#line 147 "../src/SaveDialog.vala"
	self->priv->folder_image = _tmp82_;
#line 149 "../src/SaveDialog.vala"
	_tmp83_ = _data2_->folder_dir;
#line 149 "../src/SaveDialog.vala"
	screenshot_save_dialog_update_location_button (self, _tmp83_);
#line 151 "../src/SaveDialog.vala"
	_tmp84_ = (GtkImage*) gtk_image_new_from_icon_name ("view-more-horizontal-symbolic");
#line 151 "../src/SaveDialog.vala"
	g_object_ref_sink (_tmp84_);
#line 151 "../src/SaveDialog.vala"
	arrow = _tmp84_;
#line 153 "../src/SaveDialog.vala"
	_tmp85_ = (GtkBox*) gtk_box_new (GTK_ORIENTATION_HORIZONTAL, 3);
#line 153 "../src/SaveDialog.vala"
	g_object_ref_sink (_tmp85_);
#line 153 "../src/SaveDialog.vala"
	location_button_indicator = _tmp85_;
#line 154 "../src/SaveDialog.vala"
	_tmp86_ = location_button_indicator;
#line 154 "../src/SaveDialog.vala"
	_tmp87_ = self->priv->folder_image;
#line 154 "../src/SaveDialog.vala"
	gtk_box_append (_tmp86_, (GtkWidget*) _tmp87_);
#line 155 "../src/SaveDialog.vala"
	_tmp88_ = location_button_indicator;
#line 155 "../src/SaveDialog.vala"
	_tmp89_ = self->priv->folder_name;
#line 155 "../src/SaveDialog.vala"
	gtk_box_append (_tmp88_, (GtkWidget*) _tmp89_);
#line 156 "../src/SaveDialog.vala"
	_tmp90_ = location_button_indicator;
#line 156 "../src/SaveDialog.vala"
	_tmp91_ = arrow;
#line 156 "../src/SaveDialog.vala"
	gtk_box_append (_tmp90_, (GtkWidget*) _tmp91_);
#line 158 "../src/SaveDialog.vala"
	_tmp92_ = location_button_indicator;
#line 158 "../src/SaveDialog.vala"
	_tmp93_ = _g_object_ref0 ((GtkWidget*) _tmp92_);
#line 158 "../src/SaveDialog.vala"
	_tmp94_ = (GtkButton*) gtk_button_new ();
#line 158 "../src/SaveDialog.vala"
	gtk_button_set_child (_tmp94_, _tmp93_);
#line 158 "../src/SaveDialog.vala"
	_g_object_unref0 (_tmp93_);
#line 158 "../src/SaveDialog.vala"
	g_object_ref_sink (_tmp94_);
#line 158 "../src/SaveDialog.vala"
	location_button = _tmp94_;
#line 162 "../src/SaveDialog.vala"
	_tmp95_ = gtk_file_chooser_native_new (_ ("Select Screenshots Folder…"), (GtkWindow*) self, GTK_FILE_CHOOSER_ACTION_SELECT_FOLDER, _ ("Select"), NULL);
#line 162 "../src/SaveDialog.vala"
	_data2_->location_dialog = _tmp95_;
#line 169 "../src/SaveDialog.vala"
	_tmp96_ = _data2_->location_dialog;
#line 169 "../src/SaveDialog.vala"
	_tmp97_ = _data2_->folder_dir;
#line 169 "../src/SaveDialog.vala"
	_tmp98_ = g_file_new_for_path (_tmp97_);
#line 169 "../src/SaveDialog.vala"
	_tmp99_ = _tmp98_;
#line 169 "../src/SaveDialog.vala"
	gtk_file_chooser_set_current_folder ((GtkFileChooser*) _tmp96_, _tmp99_, &_inner_error0_);
#line 169 "../src/SaveDialog.vala"
	_g_object_unref0 (_tmp99_);
#line 169 "../src/SaveDialog.vala"
	if (G_UNLIKELY (_inner_error0_ != NULL)) {
#line 169 "../src/SaveDialog.vala"
		_g_object_unref0 (location_button);
#line 169 "../src/SaveDialog.vala"
		_g_object_unref0 (location_button_indicator);
#line 169 "../src/SaveDialog.vala"
		_g_object_unref0 (arrow);
#line 169 "../src/SaveDialog.vala"
		_g_object_unref0 (location_label);
#line 169 "../src/SaveDialog.vala"
		_g_object_unref0 (format_label);
#line 169 "../src/SaveDialog.vala"
		_g_object_unref0 (name_label);
#line 169 "../src/SaveDialog.vala"
		_g_free0 (date_time);
#line 169 "../src/SaveDialog.vala"
		_g_object_unref0 (dialog_label);
#line 169 "../src/SaveDialog.vala"
		_g_object_unref0 (preview);
#line 169 "../src/SaveDialog.vala"
		_g_object_unref0 (drag_source);
#line 169 "../src/SaveDialog.vala"
		_g_free0 (folder_from_settings);
#line 169 "../src/SaveDialog.vala"
		block2_data_unref (_data2_);
#line 169 "../src/SaveDialog.vala"
		_data2_ = NULL;
#line 169 "../src/SaveDialog.vala"
		g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
#line 169 "../src/SaveDialog.vala"
		g_clear_error (&_inner_error0_);
#line 1527 "SaveDialog.c"
	}
#line 172 "../src/SaveDialog.vala"
	g_object_set ((GtkWindow*) self, "default-width", 500, NULL);
#line 174 "../src/SaveDialog.vala"
	_tmp100_ = gtk_dialog_get_content_area ((GtkDialog*) self);
#line 174 "../src/SaveDialog.vala"
	_tmp101_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_TYPE (_tmp100_, gtk_box_get_type ()) ? ((GtkBox*) _tmp100_) : NULL);
#line 174 "../src/SaveDialog.vala"
	content = _tmp101_;
#line 175 "../src/SaveDialog.vala"
	_tmp102_ = content;
#line 175 "../src/SaveDialog.vala"
	_tmp103_ = dialog_label;
#line 175 "../src/SaveDialog.vala"
	gtk_box_append (_tmp102_, (GtkWidget*) _tmp103_);
#line 176 "../src/SaveDialog.vala"
	_tmp104_ = content;
#line 176 "../src/SaveDialog.vala"
	_tmp105_ = preview;
#line 176 "../src/SaveDialog.vala"
	gtk_box_append (_tmp104_, (GtkWidget*) _tmp105_);
#line 177 "../src/SaveDialog.vala"
	_tmp106_ = content;
#line 177 "../src/SaveDialog.vala"
	_tmp107_ = name_label;
#line 177 "../src/SaveDialog.vala"
	gtk_box_append (_tmp106_, (GtkWidget*) _tmp107_);
#line 178 "../src/SaveDialog.vala"
	_tmp108_ = content;
#line 178 "../src/SaveDialog.vala"
	_tmp109_ = _data2_->name_entry;
#line 178 "../src/SaveDialog.vala"
	gtk_box_append (_tmp108_, (GtkWidget*) _tmp109_);
#line 179 "../src/SaveDialog.vala"
	_tmp110_ = content;
#line 179 "../src/SaveDialog.vala"
	_tmp111_ = _data2_->name_message_revealer;
#line 179 "../src/SaveDialog.vala"
	gtk_box_append (_tmp110_, (GtkWidget*) _tmp111_);
#line 180 "../src/SaveDialog.vala"
	_tmp112_ = content;
#line 180 "../src/SaveDialog.vala"
	_tmp113_ = format_label;
#line 180 "../src/SaveDialog.vala"
	gtk_box_append (_tmp112_, (GtkWidget*) _tmp113_);
#line 181 "../src/SaveDialog.vala"
	_tmp114_ = content;
#line 181 "../src/SaveDialog.vala"
	_tmp115_ = _data2_->format_cmb;
#line 181 "../src/SaveDialog.vala"
	gtk_box_append (_tmp114_, (GtkWidget*) _tmp115_);
#line 182 "../src/SaveDialog.vala"
	_tmp116_ = content;
#line 182 "../src/SaveDialog.vala"
	_tmp117_ = location_label;
#line 182 "../src/SaveDialog.vala"
	gtk_box_append (_tmp116_, (GtkWidget*) _tmp117_);
#line 183 "../src/SaveDialog.vala"
	_tmp118_ = content;
#line 183 "../src/SaveDialog.vala"
	_tmp119_ = location_button;
#line 183 "../src/SaveDialog.vala"
	gtk_box_append (_tmp118_, (GtkWidget*) _tmp119_);
#line 185 "../src/SaveDialog.vala"
	_tmp120_ = granite_dialog_add_button ((GraniteDialog*) self, _ ("Copy to Clipboard"), 0);
#line 185 "../src/SaveDialog.vala"
	_tmp121_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_CAST (_tmp120_, gtk_button_get_type (), GtkButton));
#line 185 "../src/SaveDialog.vala"
	clipboard_btn = _tmp121_;
#line 187 "../src/SaveDialog.vala"
	_tmp122_ = granite_dialog_add_button ((GraniteDialog*) self, _ ("Cancel"), (gint) GTK_RESPONSE_CANCEL);
#line 187 "../src/SaveDialog.vala"
	_tmp123_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_CAST (_tmp122_, gtk_button_get_type (), GtkButton));
#line 187 "../src/SaveDialog.vala"
	retry_btn = _tmp123_;
#line 189 "../src/SaveDialog.vala"
	_tmp124_ = granite_dialog_add_button ((GraniteDialog*) self, _ ("Save"), (gint) GTK_RESPONSE_APPLY);
#line 189 "../src/SaveDialog.vala"
	_tmp125_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_CAST (_tmp124_, gtk_button_get_type (), GtkButton));
#line 189 "../src/SaveDialog.vala"
	_data2_->save_btn = _tmp125_;
#line 190 "../src/SaveDialog.vala"
	_tmp126_ = _data2_->save_btn;
#line 190 "../src/SaveDialog.vala"
	gtk_widget_set_receives_default ((GtkWidget*) _tmp126_, TRUE);
#line 191 "../src/SaveDialog.vala"
	_tmp127_ = _data2_->save_btn;
#line 191 "../src/SaveDialog.vala"
	gtk_widget_add_css_class ((GtkWidget*) _tmp127_, GRANITE_STYLE_CLASS_SUGGESTED_ACTION);
#line 193 "../src/SaveDialog.vala"
	_tmp128_ = _data2_->name_entry;
#line 193 "../src/SaveDialog.vala"
	g_signal_connect_data ((GtkEditable*) _tmp128_, "changed", (GCallback) __screenshot_save_dialog___lambda7__gtk_editable_changed, block2_data_ref (_data2_), (GClosureNotify) block2_data_unref, 0);
#line 208 "../src/SaveDialog.vala"
	_tmp129_ = _data2_->save_btn;
#line 208 "../src/SaveDialog.vala"
	g_signal_connect_data (_tmp129_, "clicked", (GCallback) __screenshot_save_dialog___lambda8__gtk_button_clicked, block2_data_ref (_data2_), (GClosureNotify) block2_data_unref, 0);
#line 212 "../src/SaveDialog.vala"
	_tmp130_ = clipboard_btn;
#line 212 "../src/SaveDialog.vala"
	g_signal_connect_object (_tmp130_, "clicked", (GCallback) __screenshot_save_dialog___lambda9__gtk_button_clicked, self, 0);
#line 217 "../src/SaveDialog.vala"
	_tmp131_ = retry_btn;
#line 217 "../src/SaveDialog.vala"
	g_signal_connect_data (_tmp131_, "clicked", (GCallback) __screenshot_save_dialog___lambda10__gtk_button_clicked, block2_data_ref (_data2_), (GClosureNotify) block2_data_unref, 0);
#line 221 "../src/SaveDialog.vala"
	_tmp132_ = _data2_->format_cmb;
#line 221 "../src/SaveDialog.vala"
	g_signal_connect_data ((GtkComboBox*) _tmp132_, "changed", (GCallback) __screenshot_save_dialog___lambda11__gtk_combo_box_changed, block2_data_ref (_data2_), (GClosureNotify) block2_data_unref, 0);
#line 225 "../src/SaveDialog.vala"
	_tmp133_ = location_button;
#line 225 "../src/SaveDialog.vala"
	g_signal_connect_data (_tmp133_, "clicked", (GCallback) __screenshot_save_dialog___lambda12__gtk_button_clicked, block2_data_ref (_data2_), (GClosureNotify) block2_data_unref, 0);
#line 229 "../src/SaveDialog.vala"
	_tmp134_ = _data2_->location_dialog;
#line 229 "../src/SaveDialog.vala"
	g_signal_connect_data ((GtkNativeDialog*) _tmp134_, "response", (GCallback) __screenshot_save_dialog___lambda13__gtk_native_dialog_response, block2_data_ref (_data2_), (GClosureNotify) block2_data_unref, 0);
#line 42 "../src/SaveDialog.vala"
	_g_object_unref0 (retry_btn);
#line 42 "../src/SaveDialog.vala"
	_g_object_unref0 (clipboard_btn);
#line 42 "../src/SaveDialog.vala"
	_g_object_unref0 (content);
#line 42 "../src/SaveDialog.vala"
	_g_object_unref0 (location_button);
#line 42 "../src/SaveDialog.vala"
	_g_object_unref0 (location_button_indicator);
#line 42 "../src/SaveDialog.vala"
	_g_object_unref0 (arrow);
#line 42 "../src/SaveDialog.vala"
	_g_object_unref0 (location_label);
#line 42 "../src/SaveDialog.vala"
	_g_object_unref0 (format_label);
#line 42 "../src/SaveDialog.vala"
	_g_object_unref0 (name_label);
#line 42 "../src/SaveDialog.vala"
	_g_free0 (date_time);
#line 42 "../src/SaveDialog.vala"
	_g_object_unref0 (dialog_label);
#line 42 "../src/SaveDialog.vala"
	_g_object_unref0 (preview);
#line 42 "../src/SaveDialog.vala"
	_g_object_unref0 (drag_source);
#line 42 "../src/SaveDialog.vala"
	_g_free0 (folder_from_settings);
#line 42 "../src/SaveDialog.vala"
	block2_data_unref (_data2_);
#line 42 "../src/SaveDialog.vala"
	_data2_ = NULL;
#line 42 "../src/SaveDialog.vala"
	return obj;
#line 1679 "SaveDialog.c"
}

static void
screenshot_save_dialog_class_init (ScreenshotSaveDialogClass * klass,
                                   gpointer klass_data)
{
#line 23 "../src/SaveDialog.vala"
	screenshot_save_dialog_parent_class = g_type_class_peek_parent (klass);
#line 23 "../src/SaveDialog.vala"
	g_type_class_adjust_private_offset (klass, &ScreenshotSaveDialog_private_offset);
#line 23 "../src/SaveDialog.vala"
	G_OBJECT_CLASS (klass)->get_property = _vala_screenshot_save_dialog_get_property;
#line 23 "../src/SaveDialog.vala"
	G_OBJECT_CLASS (klass)->set_property = _vala_screenshot_save_dialog_set_property;
#line 23 "../src/SaveDialog.vala"
	G_OBJECT_CLASS (klass)->constructor = screenshot_save_dialog_constructor;
#line 23 "../src/SaveDialog.vala"
	G_OBJECT_CLASS (klass)->finalize = screenshot_save_dialog_finalize;
#line 23 "../src/SaveDialog.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), SCREENSHOT_SAVE_DIALOG_PIXBUF_PROPERTY, screenshot_save_dialog_properties[SCREENSHOT_SAVE_DIALOG_PIXBUF_PROPERTY] = g_param_spec_object ("pixbuf", "pixbuf", "pixbuf", gdk_pixbuf_get_type (), G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE | G_PARAM_CONSTRUCT_ONLY));
#line 23 "../src/SaveDialog.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), SCREENSHOT_SAVE_DIALOG_SETTINGS_PROPERTY, screenshot_save_dialog_properties[SCREENSHOT_SAVE_DIALOG_SETTINGS_PROPERTY] = g_param_spec_object ("settings", "settings", "settings", g_settings_get_type (), G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE | G_PARAM_CONSTRUCT_ONLY));
#line 23 "../src/SaveDialog.vala"
	screenshot_save_dialog_signals[SCREENSHOT_SAVE_DIALOG_SAVE_RESPONSE_SIGNAL] = g_signal_new ("save-response", SCREENSHOT_TYPE_SAVE_DIALOG, G_SIGNAL_RUN_LAST, 0, NULL, NULL, g_cclosure_user_marshal_VOID__BOOLEAN_STRING_STRING_STRING, G_TYPE_NONE, 4, G_TYPE_BOOLEAN, G_TYPE_STRING, G_TYPE_STRING, G_TYPE_STRING);
#line 1704 "SaveDialog.c"
}

static void
screenshot_save_dialog_instance_init (ScreenshotSaveDialog * self,
                                      gpointer klass)
{
#line 23 "../src/SaveDialog.vala"
	self->priv = screenshot_save_dialog_get_instance_private (self);
#line 1713 "SaveDialog.c"
}

static void
screenshot_save_dialog_finalize (GObject * obj)
{
	ScreenshotSaveDialog * self;
#line 23 "../src/SaveDialog.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, SCREENSHOT_TYPE_SAVE_DIALOG, ScreenshotSaveDialog);
#line 24 "../src/SaveDialog.vala"
	_g_object_unref0 (self->priv->_pixbuf);
#line 25 "../src/SaveDialog.vala"
	_g_object_unref0 (self->priv->_settings);
#line 29 "../src/SaveDialog.vala"
	_g_object_unref0 (self->priv->folder_name);
#line 30 "../src/SaveDialog.vala"
	_g_object_unref0 (self->priv->folder_image);
#line 23 "../src/SaveDialog.vala"
	G_OBJECT_CLASS (screenshot_save_dialog_parent_class)->finalize (obj);
#line 1732 "SaveDialog.c"
}

static GType
screenshot_save_dialog_get_type_once (void)
{
	static const GTypeInfo g_define_type_info = { sizeof (ScreenshotSaveDialogClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) screenshot_save_dialog_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (ScreenshotSaveDialog), 0, (GInstanceInitFunc) screenshot_save_dialog_instance_init, NULL };
	GType screenshot_save_dialog_type_id;
	screenshot_save_dialog_type_id = g_type_register_static (GRANITE_TYPE_DIALOG, "ScreenshotSaveDialog", &g_define_type_info, 0);
	ScreenshotSaveDialog_private_offset = g_type_add_instance_private (screenshot_save_dialog_type_id, sizeof (ScreenshotSaveDialogPrivate));
	return screenshot_save_dialog_type_id;
}

GType
screenshot_save_dialog_get_type (void)
{
	static volatile gsize screenshot_save_dialog_type_id__once = 0;
	if (g_once_init_enter (&screenshot_save_dialog_type_id__once)) {
		GType screenshot_save_dialog_type_id;
		screenshot_save_dialog_type_id = screenshot_save_dialog_get_type_once ();
		g_once_init_leave (&screenshot_save_dialog_type_id__once, screenshot_save_dialog_type_id);
	}
	return screenshot_save_dialog_type_id__once;
}

static void
_vala_screenshot_save_dialog_get_property (GObject * object,
                                           guint property_id,
                                           GValue * value,
                                           GParamSpec * pspec)
{
	ScreenshotSaveDialog * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, SCREENSHOT_TYPE_SAVE_DIALOG, ScreenshotSaveDialog);
#line 23 "../src/SaveDialog.vala"
	switch (property_id) {
#line 23 "../src/SaveDialog.vala"
		case SCREENSHOT_SAVE_DIALOG_PIXBUF_PROPERTY:
#line 23 "../src/SaveDialog.vala"
		g_value_set_object (value, screenshot_save_dialog_get_pixbuf (self));
#line 23 "../src/SaveDialog.vala"
		break;
#line 23 "../src/SaveDialog.vala"
		case SCREENSHOT_SAVE_DIALOG_SETTINGS_PROPERTY:
#line 23 "../src/SaveDialog.vala"
		g_value_set_object (value, screenshot_save_dialog_get_settings (self));
#line 23 "../src/SaveDialog.vala"
		break;
#line 1779 "SaveDialog.c"
		default:
#line 23 "../src/SaveDialog.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 23 "../src/SaveDialog.vala"
		break;
#line 1785 "SaveDialog.c"
	}
}

static void
_vala_screenshot_save_dialog_set_property (GObject * object,
                                           guint property_id,
                                           const GValue * value,
                                           GParamSpec * pspec)
{
	ScreenshotSaveDialog * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, SCREENSHOT_TYPE_SAVE_DIALOG, ScreenshotSaveDialog);
#line 23 "../src/SaveDialog.vala"
	switch (property_id) {
#line 23 "../src/SaveDialog.vala"
		case SCREENSHOT_SAVE_DIALOG_PIXBUF_PROPERTY:
#line 23 "../src/SaveDialog.vala"
		screenshot_save_dialog_set_pixbuf (self, g_value_get_object (value));
#line 23 "../src/SaveDialog.vala"
		break;
#line 23 "../src/SaveDialog.vala"
		case SCREENSHOT_SAVE_DIALOG_SETTINGS_PROPERTY:
#line 23 "../src/SaveDialog.vala"
		screenshot_save_dialog_set_settings (self, g_value_get_object (value));
#line 23 "../src/SaveDialog.vala"
		break;
#line 1811 "SaveDialog.c"
		default:
#line 23 "../src/SaveDialog.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 23 "../src/SaveDialog.vala"
		break;
#line 1817 "SaveDialog.c"
	}
}

